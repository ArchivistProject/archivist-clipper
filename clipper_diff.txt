
diff --git a/pages/popup.html b/pages/popup.html
index 732b307..5fe3bf9 100644
--- a/pages/popup.html
+++ b/pages/popup.html
@@ -8,6 +8,7 @@
     <script src="../scripts/archivist/api.js"></script>
     <script src="../scripts/archivist/singleFile.js"></script>
     <script src="../scripts/archivist/htmlGeneration.js"></script>
+    <script src="../scripts/archivist/fileProcessing.js"></script>
     <script src="../scripts/popup.js"></script>
   </head>
   <body>
@@ -17,7 +18,7 @@
       <h1>Description</h1><textarea id="description" ></textarea>
 
       <input id="save-page-btn" type="button" value="Save Page">
-      <div id="status-message"><div></div><div class="content"></div></div>
+        <div id="status-message"></div>
     </form>
   </body>
 </html>

diff --git a/scripts/archivist/fileProcessing.js b/scripts/archivist/fileProcessing.js
new file mode 100644
index 0000000..2a2fe9e
--- /dev/null
+++ b/scripts/archivist/fileProcessing.js
@@ -0,0 +1,104 @@
+
+Archivist.fixes = {};
+Archivist.fixes.makeSafe = (input) => {
+  var temp = noScript(input);
+  temp = noEvent(temp);
+  temp = noHref(temp);
+  //console.log("htmlObject", temp);
+  return temp;
+};
+
+function noHref(strCode){
+  var html = $(strCode.bold());
+  html.find('*').removeAttr('href');
+  return html.html();
+}
+
+function noEvent(strCode){
+  var html = $(strCode.bold());
+  var i;
+  var eventsList = ["onclick",
+"oncontextmenu",
+"ondblclick",
+"onmousedown",
+"onmouseenter",
+"onmouseleave",
+"onmousemove",
+"onmouseover",
+"onmouseout",
+"onmouseup",
+"onkeydown",
+"onkeypress",
+"onkeyup",
+"onabort",
+"onbeforeunload",
+"onerror",
+"onhashchange",
+"onload",
+"onpageshow",
+"onpagehide",
+"onresize",
+"onscroll",
+"onunload",
+"onblur",
+"onchange",
+"onfocus",
+"oninput",
+"oninvalid",
+"onreset",
+"onsearch",
+"onselect",
+"onsubmit",
+"ondrag",
+"ondragend",
+"ondragenter",
+"ondragleave",
+"ondragover",
+"ondragstart",
+"ondrop",
+"onabort",
+"oncanplay",
+"oncanplaythrough",
+"ondurationchange",
+"onemptied",
+"onended",
+"onerror",
+"onloadeddata",
+"onloadedmetadata",
+"onloadstart",
+"onpause",
+"onplay",
+"onplaying",
+"onprogress",
+"onratechange",
+"onseeked",
+"onseeking",
+"onstalled",
+"onsuspend",
+"ontimeupdate",
+"onvolumechange",
+"onwaiting",
+"onerror",
+"onmessage",
+"onmousewheel",
+"ononline",
+"onoffline",
+"onpopstate",
+"onshow",
+"onstorage",
+"ontoggle",
+"onwheel"];
+
+  for(i=0;i<eventsList.length;i++){
+    html.find('*').removeAttr(eventsList[i]);
+  }
+
+
+  return html.html();
+}
+
+function noScript(strCode){
+   var html = $(strCode.bold());
+   html.find('script').remove();
+ return html.html();
+}

diff --git a/scripts/popup.js b/scripts/popup.js
index d113890..5cb0b3a 100644
--- a/scripts/popup.js
+++ b/scripts/popup.js
@@ -1,39 +1,8 @@
-Archivist.popup = {};
-
 $(window).ready(() => {
-  const saveBtn = $('#save-page-btn');
-  const statusMessage = $('#status-message');
-
-  Archivist.popup.setStatusMessage = (newMsg, animation, delay) => {
-    let animationDelay = 0;
-    if (delay != null) {
-      animationDelay = delay;
-    }
-
-    setTimeout(() => {
-      switch (animation) {
-        case 'slide-in' :
-          statusMessage.css('opacity', 1).css('margin-left', '0%');
-          break;
-        case 'slide-out' :
-          statusMessage.css('margin-left', '-110%');
-
-          setTimeout(() => {
-            statusMessage.css('opacity', 0);
-            statusMessage.css('margin-left', '110%');
-          }, 500);
-      }
-    }, animationDelay);
-
-    statusMessage.children('.content').text(newMsg);
-  };
-
   /* region Post */
   function handlePostSuccess(data, status) {
-    if (status === 'success') {
-      Archivist.popup.setStatusMessage('Saved to Archivist', 'slide-out', 3000);
-      saveBtn.val('Saved');
-    }
+    console.log(status);
+    console.log(data);
   }
 
   function getFormData() {
@@ -75,7 +44,6 @@ $(window).ready(() => {
         },
       };
 
-      Archivist.popup.setStatusMessage('Saving to Archivist');
       Archivist.api.postDocumentData(documentData, handlePostSuccess);
     };
   }
@@ -84,15 +52,18 @@ $(window).ready(() => {
   function click() {
     chrome.tabs.query({ currentWindow: true, active: true }, (tabs) => {
       const activeTab = tabs[0];
-      Archivist.popup.setStatusMessage('Initializing HTML processing', 'slide-in');
       Archivist.singleFile.invokeSingleFile(activeTab.id, activeTab.url, false, false);
     });
   }
 
   chrome.extension.onMessageExternal.addListener((request) => {
     let blob;
+    const statusMessage = $('#status-message');
+    const saveBtn = $('#save-page-btn');
 
     if (request.processStart) {
+      statusMessage.html('Initializing...');
+
       if (request.blockingProcess) {
         chrome.tabs.sendMessage(request.tabId, {
           processStart: true,
@@ -102,7 +73,7 @@ $(window).ready(() => {
 
     if (request.processProgress) {
       saveBtn.val('Saving...').prop('disabled', true);
-      Archivist.popup.setStatusMessage(`Processing HTML:  ${(request.index / request.maxIndex) * 100}%`);
+      statusMessage.html(`Completion Percent:  ${(request.index / request.maxIndex) * 100}%`);
     }
 
     if (request.processEnd) {
@@ -111,17 +82,21 @@ $(window).ready(() => {
           processEnd: true,
         });
       }
-
-      blob = new Blob([(new Uint8Array([0xEF, 0xBB, 0xBF])), request.content], {
+    //  console.log(request.content);
+      //
+      var safeHtml = Archivist.fixes.makeSafe(request.content);
+    //  console.log("safe:",safeHtml);
+      blob = new Blob([(new Uint8Array([0xEF, 0xBB, 0xBF])), safeHtml], {
         type: 'text/html',
       });
 
       postDataToApi(blob);
+      saveBtn.val('Saved');
     }
 
     if (request.processError) {
       console.log(request);
-      Archivist.popup.setStatusMessage('Error');
+      statusMessage.html('Error');
     }
   });
 
@@ -132,19 +107,17 @@ $(window).ready(() => {
   }
 
   function applyCustomScrapedData(scrapeData) {
-    if (scrapeData != null) {
-      Object.keys(scrapeData.fields).forEach((popupFieldId) => {
-        const group = popupFieldId.split('_')[0];
-        const groupFields = $(`#section-${group}`);
-        if (!groupFields.is(':visible')) {
-          groupFields.toggle();
-          $(`input[data-section-name="${group}"]`).prop('checked', 'checked');
-        }
-
-        const curFieldValue = scrapeData.fields[popupFieldId];
-        $(`#${popupFieldId}`).val(curFieldValue);
-      });
-    }
+    Object.keys(scrapeData.fields).forEach((popupFieldId) => {
+      const group = popupFieldId.split('_')[0];
+      const groupFields = $(`#section-${group}`);
+      if (!groupFields.is(':visible')) {
+        groupFields.toggle();
+        $(`input[data-section-name="${group}"]`).prop('checked', 'checked');
+      }
+
+      const curFieldValue = scrapeData.fields[popupFieldId];
+      $(`#${popupFieldId}`).val(curFieldValue);
+    });
   }
 
   // Sets some default fields (title, date added, url)
@@ -234,7 +207,7 @@ $(window).ready(() => {
   }
 
   /* region Init */
-  saveBtn.click(click);
+  $('#save-page-btn').click(click);
 
   Archivist.api.getMetadataFieldGroups(handleMetadataGroupSuccess);
   /* endregion Init */
